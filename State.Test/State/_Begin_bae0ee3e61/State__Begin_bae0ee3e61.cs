// Test generated by RoostGPT for test CsharpUnitTest using AI Type Open AI and AI Model gpt-4

using NUnit.Framework;
using Moq;
using System;

namespace FiniteStateMachine.Test
{
    [TestFixture]
    public class State__Begin_bae0ee3e61
    {
        private Mock<State<string>> _stateMock; // specify a type argument for State
        private FiniteStateChangeEventArgs _eventArgs;
        private string _previousStateKey;

        [SetUp]
        public void SetUp()
        {
            _stateMock = new Mock<State<string>>(); // specify a type argument for State
            _eventArgs = new FiniteStateChangeEventArgs();
            _previousStateKey = "previousState";
        }

        [Test]
        public void _Begin_WithValidArgs_CallsBeginMethod()
        {
            // Arrange
            _stateMock.Setup(s => s.Begin(_eventArgs, _previousStateKey));

            // Act
            _stateMock.Object.Begin(_eventArgs, _previousStateKey); // call Begin instead of _Begin

            // Assert
            _stateMock.Verify(s => s.Begin(_eventArgs, _previousStateKey), Times.Once);
        }

        [Test]
        public void _Begin_WithNullEventArgs_ThrowsArgumentNullException()
        {
            // Arrange
            _eventArgs = null;

            // Act & Assert
            Assert.Throws<ArgumentNullException>(() => _stateMock.Object.Begin(_eventArgs, _previousStateKey)); // call Begin instead of _Begin
        }

        [Test]
        public void _Begin_WithNullPreviousStateKey_ThrowsArgumentNullException()
        {
            // Arrange
            _previousStateKey = null;

            // Act & Assert
            Assert.Throws<ArgumentNullException>(() => _stateMock.Object.Begin(_eventArgs, _previousStateKey)); // call Begin instead of _Begin
        }

        [TearDown]
        public void TearDown()
        {
            _eventArgs = null;
            _previousStateKey = null;
        }
    }
}
