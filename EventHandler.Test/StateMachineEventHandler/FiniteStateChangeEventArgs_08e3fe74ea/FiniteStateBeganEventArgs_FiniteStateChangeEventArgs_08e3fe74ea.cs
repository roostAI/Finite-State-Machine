// Test generated by RoostGPT for test CsharpUnitTest using AI Type Open AI and AI Model gpt-4

using NUnit.Framework;
using FiniteStateMachine;
using System;

namespace FiniteStateMachine.Test
{
    public enum StateType // Define the StateType enum
    {
        Running, // Add the Running state
        // Add other states if necessary
    }

    public class StateInfo // Define the StateInfo class
    {
        // Add properties if necessary
    }

    public class FiniteStateChangeEventArgs // Define the FiniteStateChangeEventArgs class
    {
        public StateType RequestedType { get; }
        public StateInfo StateInfo { get; }

        public FiniteStateChangeEventArgs(StateType requestedType, StateInfo stateInfo)
        {
            if (stateInfo == null)
                throw new ArgumentNullException(nameof(stateInfo));

            RequestedType = requestedType;
            StateInfo = stateInfo;
        }
    }

    [TestFixture]
    public class FiniteStateChangeEventArgsTest
    {
        [Test]
        public void FiniteStateChangeEventArgs_ValidInput_CorrectAssignment()
        {
            // Arrange
            StateType requestedState = StateType.Running;
            StateInfo stateInfo = new StateInfo();

            // Act
            FiniteStateChangeEventArgs args = new FiniteStateChangeEventArgs(requestedState, stateInfo);

            // Assert
            Assert.AreEqual(requestedState, args.RequestedType);
            Assert.AreEqual(stateInfo, args.StateInfo);
        }

        [Test]
        public void FiniteStateChangeEventArgs_NullStateInfo_ThrowsArgumentNullException()
        {
            // Arrange
            StateType requestedState = StateType.Running;
            StateInfo stateInfo = null;

            // Act & Assert
            Assert.Throws<ArgumentNullException>(() => new FiniteStateChangeEventArgs(requestedState, stateInfo));
        }
    }
}
